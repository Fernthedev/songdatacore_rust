name: Rust Release

on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]
  release:
    types:
      - created
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  


jobs:

  build:

    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        targetOS: [ubuntu-latest, windows-latest, macOS-latest, aarch64-linux-android]
        include:
          - targetOS: ubuntu-latest
            os: ubuntu-latest
            cargo-arg: ""
            file-name: "libsong_data_core_rust.so"
            lib-name: "libsong_data_core_rust.so"
            build-folder: "./target/release/"
            
          - targetOS: macOS-latest
            os: macOS-latest
            cargo-arg: ""
            file-name: "libsong_data_core_rust.dylib"
            lib-name: "libsong_data_core_rust.dylib"
            build-folder: "./target/release/"
            
          - targetOS: windows-latest
            os: windows-latest
            cargo-arg: ""
            file-name: "song_data_core_rust.dll"
            lib-name: "song_data_core_rust.dll.lib"
            build-folder: "./target/release/"
            
          - targetOS:  aarch64-linux-android
            os: ubuntu-latest
            cargo-arg: "ndk -t arm64-v8a -o target/release"
            file-name: "libsong_data_core_rust.so"
            lib-name: "libsong_data_core_rust.so"
            build-folder: "./target/release/arm64-v8a"

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.targetOS }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
    
    - name: Setup NDK
      if: contains(matrix.cargo-arg, 'ndk')
      id: setup-ndk
      uses: nttld/setup-ndk@v1.0.3
      with:
        ndk-version: r22
    - name: Download Cargo NDK
      if: contains(matrix.cargo-arg, 'ndk')
      run: |
        rustup default nightly
        cargo +nightly install cargo-ndk
        rustup target add aarch64-linux-android
    - name: Build
      run: cargo +nightly ${{matrix.cargo-arg}} build --verbose --release
    - name: Rename and move files
      run: |
        ls ./target/release/
        ls ${{ matrix.build-folder }}
        mv "${{ matrix.build-folder }}/${{ matrix.file-name }}" "./${{ matrix.targetOS }}-${{ matrix.file-name }}"
        # Move only if exists
        [ -f ${{ matrix.build-folder }}/${{ matrix.lib-name }} ] && mv ${{ matrix.build-folder }}/${{ matrix.lib-name }} ./${{ matrix.targetOS }}-${{ matrix.lib-name }} || true
        echo Done
      shell: bash  
    - name: Run tests
      if: ${{ !contains(matrix.cargo-arg, 'ndk') }}
      run: cargo +nightly test --verbose
      
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
# Needed?      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ./${{ matrix.targetOS }}-${{ matrix.file-name }}
          ./${{ matrix.targetOS }}-${{ matrix.lib-name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
